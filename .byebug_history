c
products.dig(:response, :produtos).last(3)
products.dig(:response, :produtos).first
products.dig(:response, :produtos).count
products
n
c
ap response.body.dig(:response, :produtos).first
response = @conn.get(url, headers)
url = "v1.2/produto/listaprodutos/0/detalhado"
c
n
PRODUCTS_DETAILS_PATH
quit
response
ap response.body.dig(:response, :produtos)
ap response.body.dig(:response, :produtos).first
products.dig(:codigo)
ap response.body.dig(:response, :produtos).first
ap response.body.dig(:response, :produtos)
response = @conn.get(url, headers)
url = "/v1.1/produto/listaprodutos/0/detalhado"
quit
response = @conn.get(url, headers)
url = "v1.2/produto/listaprodutos/1/detalhado"
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
exclude_date = Date.parse("18/03/2020").strftime("%d-%m-%Y")
url = "/v1.1/produto/excluidos/lastid/11231/dataexclusao/#{exclude_date}"
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
exclude_date = Date.parse("18/03/2023").strftime("%d-%m-%Y")
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
exclude_date = Date.parse("18/03/2020").strftime("%d-%m-%Y")
exclude_date = Date.parse("18/03/2020").strftime("%d/%m/%Y")
exclude_date = Date.parse("18/03/2020").
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{encoded_exclude_date}"
encoded_exclude_date = CGI.escape(exclude_date).gsub('+', '%')
encoded_exclude_date = CGI.escape(exclude_date)
exclude_date = Date.parse("18/03/2020").strftime("%d/%m-%Y")
ap response.body.dig(:response)
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{encoded_exclude_date}"
encoded_exclude_date = CGI.escape(exclude_date)
exclude_date = Date.parse("18/03/2020").strftime("%Y-%m-%d")
response = @conn.get(url, headers)
exclude_date = CGI.escape(exclude_date)
exclude_date = '18/03/2020'
token_expired?
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
exclude_date = CGI.escape(exclude_date)
exclude_date = '18/03/2020'
c
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
exclude_date = CGI.escape(exclude_date)
exclude_date = '18/03/2020'
response = @conn.get(url, headers)
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
exclude_date = '18/03/2020'
url = "/v1.1/produto/excluidos/lastid/0/dataexclusao/#{exclude_date}"
ap response.body.dig(:response, :produtos).first
response = @conn.get(url, headers)
url = "/v1.2/produto/listaprodutos/0/detalhado"
ap response.body.dig(:response, :produtos)
ap response.body.dig(:response, :produto)
response = @conn.get(url, headers)
url = "/v1.2/produto/listaprodutos/0/detalhado"
encoded_data_hora = CGI.escape(data_hora_manutencao).gsub('+', '%20')
data_hora_manutencao = '01-01-2024 10:00:00'
ap response.body.dig(:response, :produto)
ap response.body.dig(:response)
ap response.body.dig(:produto)
ap response.body
ap response.body.dig(:produtos).count
response = @conn.get(url, headers)
url = "/v1.1/produto/10162"
response = @conn.get(url, headers)
url = "/v1.1/produto/0"
sorted_products.first(5)
sorted_products.
sorted_products.first 
products.first[:codigo]
products.first
products.dig(:codigo)
products.class
products =  response.body.dig(:produtos)
ap response.body.dig(:produtos).count
ap response.body.dig(:produtos).first
response = @conn.get(url, headers)
url = "/v1.1/produto/listaprodutos/0"
ap response.body.dig(:produtos).first
response.body.dig(:produtos).first
response.body.dig(:produtos).count
response.body.dig(:produtos)
response.body.dig(:messages)
response.body.dig(:status)
response.body.dig(:response)
response.dig(:response)
response['reponse']
response[:reponse]
response[:status]
response.status[:response]
response.body[:response]
response.body
response = @conn.get(url, headers)
url = "/v1.1/produto/listaprodutos/210889"
ap response.body
ap response.body.dig(:response)
ap response.body.dig(:response, :produto)
response = @conn.get(url, headers)
url = "/v1.1/produto/listaprodutos/0"
ap response.body.dig(:response, :produto)
ap response.body.dig(:response)
ap response.body[:response]
ap response.body[:reponse]
ap response.body.response
ap response.body
response = @conn.get(url, headers)
url = "/v1.1/produto/210889/detalhado"
ap response.body
ap response.
ap response.produtos
ap response.body
response = @conn.get(url, headers)
url = "/v1.1/produto/listaprodutos/210889"
ap response.body
ap response.body.class
ap response.body
ap response.status
response = @conn.get(url, headers)
url = "/v1.1/produto/listaprodutos/0"
headers
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = CGI.escape(data_hora_manutencao).gsub('+', '%20')
data_hora_manutencao = '01-01-2024 10:00:00'
data_hora_manutencao = '01-01-2025 00:00:00'
quit
ap response
response
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = CGI.escape(data_hora_manutencao).gsub('+', '%20')
encoded_data_hora = CGI.escape(data_hora_manutencao)
data_hora_manutencao = '01-01-2025 00:00:00'
require 'cgi'
response = @conn.get(url, headers)
encoded_data_hora = CGI.escape(data_hora_manutencao)
data_hora_manutencao = '01-01-2023 10:00:00'
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = CGI.escape(data_hora_manutencao)
data_hora_manutencao = '01-01-2025 00:00:00'
require 'cgi'
response = @conn.get(url, headers)
 url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = URI.encode_www_form_component(data_hora_manutencao)
data_hora_manutencao = '01-01-2025 00:00:00'
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrManutencao/10-06-2024%2011:00:00"
response = @conn.get(url, headers)
RpInfoClient.token_expired?
url = "/v1.0/produtos/alterados/dthrManutencao/"
RpInfoClient.token_expired?
client.token_expired?
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrManutencao/#{encoded_dthr_manutencao}"
encoded_dthr_manutencao = URI.encode_www_form_component(data_hora_formatada)
data_hora_formatada = DateTime.strptime(data_hora_string, '%d/%m/%Y %H:%M:%S').strftime('%d-%m-%Y %H:%M:%S')
data_hora_string = "21/08/2023 08:20:54.215"
require 'date'
c
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{data_hora_manutencao}"
data_hora_manutencao = Time.utc(2025, 1, 1, 10, 30, 0).strftime('%d-%m-%Y %H:%M:%S')
require 'time'
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = URI.encode_www_form_component(data_hora_manutencao)
data_hora_manutencao = '01-01-2025 10:30:00'
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = URI.encode_www_form_component(data_hora_manutencao)
data_hora_manutencao = '01-01-2025 00:00:00'
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{encoded_data_hora}"
encoded_data_hora = URI.encode_www_form_component(data_hora_manutencao)
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{data_hora_manutencao}"
data_hora_manutencao = '01-01-2025 00:00:00'
url = "/v1.0/produtos/alterados/dthrmanutencao/#{dthr_manutencao}"
response = @conn.get(url, headers)
data_hora_manutencao = '01-01-2025 00:00:00'
response = @conn.get(url, headers)
url = "/v1.0/produtos/alterados/dthrmanutencao/#{dthr_manutencao}"
dthr_manutencao = '01012025'
@conn.post("/v1.0/produtos/alterados/dthrmanutencao/%2701012025%27", headers)
@conn.post("/v1.0/produtos/alterados/dthrmanutencao", {'dthrmanutencao': '01/01/2024'}, headers)
@conn.post("/v1.0/produtos/alterados/dthrmanutencao/", {'dthrmanutencao': '01/01/2024'}, headers)
@conn.post("/v1.1/auth/usuario", payload, headers)
@conn.post("/v1.0/auth/usuario", payload, headers)
@token
@conn.post("/v1.1/auth/usuario", payload, headers)
@conn.post("/v1.0/auth/usuario", payload, headers)
headers
c
response = @conn.post("/v1.0#{AUTH_PATH}/usuario", payload, { "Content-Type" => "application/json", 'Authorization' => "Bearer #{@token}"  })
response = @conn.post("#{VERSION_PATH}#{AUTH_PATH}/usuario", payload, { "Content-Type" => "application/json", 'Authorization' => "Bearer #{@token}"  })
response = @conn.post("#{VERSION_PATH}#{AUTH_PATH}/usuario", payload, { "Content-Type" => "application/json" })
n
c
@token_expiration = Time.now + auth_data[:expiresIn] if auth_data[:expiresIn]
 @token
n
c
auth_data[:expiresIn]
@token = auth_data
@token = auth_data[:token]
auth_data = response.body[:response]
@token = auth_data[:response][:token]
@token = auth_data[:response]
@token = auth_data.dig(:reponse)
@token = auth_data["token"]
@token = auth_data
@token = auth_data[:token]
n
response
c
response = @conn.post("#{VERSION_PATH}#{AUTH_PATH}", payload, { "Content-Type" => "application/json" })
n
c
response = @conn.post('/v1.1/auth', { "user": "100000", "password": "123456" }.to_json)
@conn.post(AUTH_PATH, { "user": "100000", "password": "123456" }.to_json)
{ "user": "100000", "password": "123456" }.to_json
response = @conn.post('/v1.1/auth', { user: "100000", password: "123456" }.to_json)
response.body
response.status
response = @conn.post(AUTH_PATH, { user: "100000", password: "123456" }.to_json)
@conn.post(AUTH_PATH, { user: "100000", password: "123456" }.to_json)
c
authenticate!
@conn.url
@conn
n
